// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id String @id @default(uuid())
  email String @unique
  password String
  createAt DateTime @default(now())
  client client @relation(fields: [clientId], references: [id])
  clientId Int @unique
  cards card[]
}

model client {
  id Int @id @default(autoincrement())
  name String
  lastName String
  phone String @unique
  birthday DateTime
  address String
  image String
  user user?
}

model card {
  id String @id @default(uuid())
  user user @relation(fields: [userId], references: [id])
  userId String
  transactions transaction[]
  cardInfo cardInfo @relation(fields: [cardInfoId], references: [id])
  cardInfoId Int @unique
}

model cardInfo {
  id Int @id @default(autoincrement())
  accountNumber String @unique
  cardType String
  expirationDate DateTime
  issuerBank String
  balance Float
  card card?
}

model transaction {
  id String @id @default(uuid())
  amount Float
  description String?
  status Boolean 
  card card @relation(fields: [cardId], references: [id])
  cardId String
  createAt DateTime @default(now())
  targetAccount String?
  legalPerson legalPerson? @relation(fields: [legalPersonId], references: [id])
  legalPersonId Int
}

model legalPerson {
  id Int @id @default(autoincrement())
  companyName String
  companyLogo String
  transaction transaction[]
}